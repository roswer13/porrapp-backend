# Generated by Django 5.2.7 on 2025-10-16 09:27

import core.models.competition
import core.models.team
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the competition', max_length=128, verbose_name='Name')),
                ('year', models.PositiveIntegerField(default=2024, help_text='Year of the competition', verbose_name='Year')),
                ('host_country', models.CharField(blank=True, help_text='Country hosting the competition', max_length=128, null=True, verbose_name='Host Country')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=core.models.competition.logo_upload_path)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the team', max_length=128, verbose_name='Name')),
                ('flag', models.ImageField(blank=True, null=True, upload_to=core.models.team.logo_upload_path)),
                ('competition', models.ForeignKey(help_text='Competition this team belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='core.competition', verbose_name='Competition')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(help_text='Stage of the competition (e.g., Group Stage, Quarterfinal)', max_length=64, verbose_name='Stage')),
                ('date', models.DateTimeField(help_text='Date and time when the match is scheduled', verbose_name='Date and Time')),
                ('home_score', models.PositiveIntegerField(default=0, help_text='Score of the home team', verbose_name='Home Team Score')),
                ('away_score', models.PositiveIntegerField(default=0, help_text='Score of the away team', verbose_name='Away Team Score')),
                ('is_finished', models.BooleanField(default=False, help_text='Indicates if the match has finished', verbose_name='Is Finished')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the match record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the match record was last updated', verbose_name='Updated At')),
                ('competition', models.ForeignKey(help_text='Competition this match belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='core.competition', verbose_name='Competition')),
                ('away_team', models.ForeignKey(help_text='The away team for this match', on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='core.team', verbose_name='Away Team')),
                ('home_team', models.ForeignKey(help_text='The home team for this match', on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='core.team', verbose_name='Home Team')),
            ],
        ),
    ]
